# Generated by Django 4.1.7 on 2023-03-08 09:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('community', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('feed', '0004_alter_userpost_privacy_level'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('posted_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.CharField(max_length=2000)),
                ('object_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tag', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='communitypostcomment',
            name='commenter',
        ),
        migrations.RemoveField(
            model_name='communitypostcomment',
            name='post',
        ),
        migrations.RemoveField(
            model_name='userpostcomment',
            name='commenter',
        ),
        migrations.RemoveField(
            model_name='userpostcomment',
            name='post',
        ),
        migrations.RemoveField(
            model_name='communitypost',
            name='content',
        ),
        migrations.RemoveField(
            model_name='communitypost',
            name='image',
        ),
        migrations.RemoveField(
            model_name='communitypost',
            name='likes',
        ),
        migrations.RemoveField(
            model_name='userpost',
            name='content',
        ),
        migrations.RemoveField(
            model_name='userpost',
            name='image',
        ),
        migrations.RemoveField(
            model_name='userpost',
            name='likes',
        ),
        migrations.AddField(
            model_name='communitypost',
            name='content_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='communitypost',
            name='likers',
            field=models.ManyToManyField(related_name='%(class)s_likers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communitypost',
            name='object_id',
            field=models.PositiveIntegerField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='communitypost',
            name='text',
            field=models.CharField(max_length=10000, null=True),
        ),
        migrations.AddField(
            model_name='userpost',
            name='content_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='userpost',
            name='likers',
            field=models.ManyToManyField(related_name='%(class)s_likers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userpost',
            name='object_id',
            field=models.PositiveIntegerField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='userpost',
            name='text',
            field=models.CharField(max_length=10000, null=True),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='community',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.community'),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='poster',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='%(class)s_poster', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userpost',
            name='poster',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='%(class)s_poster', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='communitypost',
            index=models.Index(fields=['content_type', 'object_id'], name='feed_commun_content_4cd94c_idx'),
        ),
        migrations.AddIndex(
            model_name='userpost',
            index=models.Index(fields=['content_type', 'object_id'], name='feed_userpo_content_118dbd_idx'),
        ),
        migrations.DeleteModel(
            name='Community',
        ),
        migrations.DeleteModel(
            name='CommunityPostComment',
        ),
        migrations.DeleteModel(
            name='UserPostComment',
        ),
        migrations.AddField(
            model_name='comment',
            name='content_type',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='comment',
            name='likers',
            field=models.ManyToManyField(related_name='%(class)s_likers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='poster',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.SET_DEFAULT, related_name='%(class)s_poster', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communitypost',
            name='tags',
            field=models.ManyToManyField(to='feed.tags'),
        ),
        migrations.AddField(
            model_name='userpost',
            name='tags',
            field=models.ManyToManyField(to='feed.tags'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['content_type', 'object_id'], name='feed_commen_content_e2899a_idx'),
        ),
    ]
